#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUF_MAX 1000

void q1(void);

void q2(void);

void q2_1(void);

void q2_2(void);
int getLength(char *);

void q2_3(void);
int getNameLength(char *);
int getAge(char *);

int main(int argc, char *argv[]){	// enter main question number

	int nMainQuest = 0;	// argv[1]

	if (argc != 2 || *argv[1] < 48 || *argv[1] > 57){	// If argc is not 2 and *argv[1] is not 0 to 9,
		printf("not appropriate parameter, enter correct parameters again\n");
		printf("argv[1] : ");
		scanf("%d", argv[1]);	// Enter correct parameter again.
	}
	
	nMainQuest = *argv[1] - 48;	// atoi

	switch (nMainQuest){
	case 1:
		q1();
		break;

	case 2:
		q2();
		break;

	default:
		break;
	}

	return 0;
}

void q1(void){
	
	int cNum = 0;	// init
	
	printf("Question.1\n");	// question number
	cNum = getchar();	// get cNum

	while (1){
		if ((64 < cNum && cNum < 91) || (96 < cNum && cNum < 123)){	// If it is alphabet,
			break;
		}
		else{
			getchar();
			printf("enter correct alphabet again\n");	// enter again
			cNum = getchar();
		}
	}

	if (cNum < 91){	// If it is uppercase,
		cNum += 32;	// transform to lowercase
	}
	else if (cNum > 96){	// If it is lowercase,
		cNum -= 32;	// transform to uppercase.
	}

	putchar(cNum);	// put cNum

	// ent of q1
}

void q2(void){

	int nSubQuest = 0;	// init

	printf("enter question number");
	printf("Question.2 - ");
	scanf("%d", &nSubQuest);	// enter sub question number

	switch (nSubQuest)
	{
	case 1:
		q2_1();
		break;

	case 2:
		q2_2();
		break;

	case 3:
		q2_3();
		break;

	default:
		break;
	}

	// end of q2
}

void q2_1(void){

	// init
	char arrStr[BUF_MAX];
	int szStr = sizeof(arrStr);
	int i = 0;
	int nTotal = 0, nNum = 0;

	fputs("enter anything\n", stdout);
	getchar();
	fgets(arrStr, szStr, stdin);	// enter string

	while (arrStr[i] != '\0'){	// Until reach NULL, 
		nNum = arrStr[i] - 48;
		if ((0 <= nNum) && (nNum <= 9))	// If it is number,
			nTotal += nNum;	// add it to nTotal.
		i++;	// next arr
	}

	printf("%d", nTotal);	// print total number

	// end of q2_1
}

void q2_2(void){

	// init
	char str1[BUF_MAX];
	char str2[BUF_MAX];
	char str3[BUF_MAX];

	int i = 0;
	int lenstr1 = 0, lenstr2 = 0;

	fputs("enter str1\n", stdout);
	getchar();	// renove \n
	fgets(str1, BUF_MAX, stdin);	// enter string to str1

	lenstr1 = getLength(str1);	// get length

	strncpy(str3, str1, lenstr1);	// copy str1 to str3
	str3[lenstr1] = 0;	// set null
	
	fputs("\nenter str2\n", stdout);
	//getchar();	// remove first char of str2
	fgets(str2, BUF_MAX, stdin);	// enter string to str2

	lenstr2 = getLength(str2);	// get length

	strncat(str3, str2, lenstr2);	// copy str2 to str3

	printf("\n\nresult : ");
	fputs(str3, stdout);	// print str3

	printf("\n\n");

	// end of q2_2
}

int getLength(char arr[BUF_MAX]){

	// init
	int lenarr = 0;
	int i = 0;

	while (arr[i] != '\n'){	// get length
		i++;
		lenarr = i;
	}

	return lenarr;

	// end of getlength
}

void q2_3(void){

	// init
	char str1[BUF_MAX];
	char str2[BUF_MAX];
	char str3[BUF_MAX];
	
	char name1[BUF_MAX];
	char name2[BUF_MAX];
	char name3[BUF_MAX];

	char strAge1[BUF_MAX];
	char strAge2[BUF_MAX];
	char strAge3[BUF_MAX];

	int lenName1 = 0, lenName2 = 0, lenName3 = 0;
	int nAge1 = 0, nAge2 = 0, nAge3 = 0;

	printf("1st (name, age)\n");
	getchar();
	fgets(str1, BUF_MAX, stdin);	// enter string to str1

	printf("2nd (name, age)\n");
	fgets(str2, BUF_MAX, stdin);	// enter string to str2

	printf("3rd (name, age)\n");
	fgets(str3, BUF_MAX, stdin);	// enter string to str3

	printf("\n");

	lenName1 = getNameLength(str1);	// get name length to copy
	lenName2 = getNameLength(str2);	// get name length to copy
	lenName3 = getNameLength(str3);	// get name length to copy

	strncpy(name1, str1, lenName1);	// copy name to other arr
	fputs(name1, stdout);
	printf("\n");
	strncpy(name2, str2, lenName2);	// copy name to other arr
	fputs(name2, stdout);
	printf("\n");
	strncpy(name3, str3, lenName3);	// copy name to other arr
	fputs(name3, stdout);
	printf("\n\n");

	nAge1 = getAge(str1);	// get age1 from str1
	nAge2 = getAge(str2);	// get age2 from str2
	nAge3 = getAge(str3);	// get age3 from str3

	// check name
	if (strcmp(name1, name2) == 0){	// If these are same string,
		fputs("1 and 2 have same name.\n", stdout);	// print this.
	}
	else{	// If these are not same string,
		fputs("1 and 2 have different name.\n", stdout);	// print this.
	}

	if (strcmp(name2, name3) == 0){	// If these are same string,
		fputs("2 and 3 have same name.\n", stdout);	// print this.
	}
	else{	// If these are not same string,
		fputs("2 and 3 have different name.\n", stdout);	// print this.
	}

	if (strcmp(name3, name1) == 0){	// If these are same string,
		fputs("3 and 1 have same name.\n", stdout);	// print this.
	}
	else{	// If these are not same string,
		fputs("3 and 1 have different name.\n", stdout);	// print this.
	}


	// check age
	if (nAge1 == nAge2){	// If these are same int,
		fputs("1 and 2 have same age.\n", stdout);	// print this.
	}
	else{	// If these are not same int,
		fputs("1 and 2 have different age.\n", stdout);	// print this.
	}

	if (nAge2 == nAge3){	// If these are same int,
		fputs("2 and 3 have same age.\n", stdout);	// print this.
	}
	else{	// If these are not same int,
		fputs("2 and 3 have different age.\n", stdout);	// print this.
	}

	if (nAge3 == nAge1){	// If these are same int,
		fputs("3 and 1 have same age.\n", stdout);	// print this.
	}
	else{	// If these are not same int,
		fputs("3 and 1 have different age.\n", stdout);	// print this.
	}


	// end of q2_3
}

int getNameLength(char arr[BUF_MAX]){

	// init
	int i = 0;
	int nLength;

	while (arr[i] != ' '){	// find blank (between name & age)
		i++;
		nLength = i;
	}

	return nLength;

	// end of getNameLength
}

int getAge(char arr[BUF_MAX]){
	
	// init
	char strAge[BUF_MAX];

	int i = 0, j = 0;
	int nNameLength = 0;
	int nAgeLength = 0;
	int nAge = 0;

	while (arr[i] != ' '){	// find blank (between name & age)
		i++;
		nNameLength = i;
	}

	while (arr[i] != '\n'){	// find null (end of age)
		i++;
		nAgeLength = i;
	}

	for (i = nNameLength + 1; i < nAgeLength; i++){	// make age-string from total-string
		strAge[j] = arr[i];
		j++;
	}

	nAge = atoi(strAge);	// atoi

	return nAge;

	// end of getAge
}